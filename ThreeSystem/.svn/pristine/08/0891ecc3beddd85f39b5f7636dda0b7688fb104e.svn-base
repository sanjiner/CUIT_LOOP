package com.example.PCenter;

import org.json.JSONObject;

import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.Response.Listener;
import com.android.volley.plus.VolleyErrorHelper;
import com.android.volley.toolbox.StringRequest;
import com.common.tools.L;
import com.exam.ThreeSystem.R;
import com.example.proces.MainActivityProcess;
import com.example.thesis.MainActivityThesis;
import com.example.thesis.student.activity.Thesis_StudentMainActivity;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

public class Login extends BaseActivity implements OnClickListener{
	private String BASE_URL = Constant.INTERFACE_SITE;
	private String thesis_BASEURL = Constant.THESIS_BASEURL;
	private String NOW_URL = "";
//	static String YES = "yes";
//	static String NO = "no";
	private AutoCompleteTextView edtUserName;
	private EditText edtPassWord;
	private Button btnLogin, select_useryupe, select_system;
	private CheckBox rem_passWord;
	private String ismemory="";
	private static String userName, passWord, userIdentity="", system;//得到用户名，密码，类型
	private static final String[] usertype = Constant.USERIDENTITY;
	private static final String[] systemList = Constant.SYSTEM;
	private String FILE = Constant.USERINFO_SP;//用于保存SharedPreferences的文件
	private SharedPreferences sp;
	private ProgressDialog dialog;
	public String TeacherID;
	public String TeacherName;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);//取消标题
		setContentView(R.layout.activity_login);		
		setListener();				
		
		sp = getSharedPreferences(FILE, MODE_PRIVATE);
		ismemory = sp.getString(Constant.SPFIELD.ISMEMORY, "");
		putInto();//进入界面时，这个if用来判断SharedPreferences里面name和password有没有数据，有的话则直接打在EditText上面
		
	}
	
	
	private void setListener()
	{
		SetupView();
		select_useryupe.setOnClickListener(this);
		select_system.setOnClickListener(this);
		btnLogin.setOnClickListener(this);
	}
	
	private void showUserType()
	{
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setTitle("选择用户列表");				 
		builder.setItems(usertype, new DialogInterface.OnClickListener()
		{
			@Override
			public void onClick(DialogInterface dialog, int which)
			{
				String str = usertype[which];
				//Toast.makeText(Login.this, "我动了" + str, Toast.LENGTH_SHORT).show();
				select_useryupe.setText(str);
			}
		});
		AlertDialog dialog = builder.create();
		dialog.show();
	}
	
	private void selectSystem()
	{
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setTitle("选择系统");				 
		builder.setItems(systemList, new DialogInterface.OnClickListener()
		{			
			@Override
			public void onClick(DialogInterface dialog, int which)
			{
				String str = systemList[which];
				select_system.setText(str);
			}
		});
		AlertDialog dialog = builder.create();
		dialog.show();
	}

	private void SetupView()
	{
		edtUserName = (AutoCompleteTextView) findViewById(R.id.edtUserName);
		edtPassWord=(EditText) findViewById(R.id.edtPassWord);
		btnLogin=(Button) findViewById(R.id.btnLogin);
		rem_passWord=(CheckBox) findViewById(R.id.auto_login);
		select_useryupe=(Button) findViewById(R.id.select_useryupe);
		select_system = (Button) findViewById(R.id.select_system);
		progressDialog();
	}
	
	//转圈
	private void progressDialog()
	{
		dialog = new ProgressDialog(mActivity);
		dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);// 设置进度条的形式为圆形转动的进度条  
        dialog.setCancelable(true);// 设置是否可以通过点击Back键取消  
        dialog.setCanceledOnTouchOutside(false);// 设置在点击Dialog外是否取消Dialog进度条  
        dialog.setIcon(R.drawable.ic_launcher);//  
        dialog.setMessage("正在登录，请等待。。。。");  
        dialog.setTitle("提示");
	}
	
	
	
	private void login(){	
		system = select_system.getText().toString();
		userName = edtUserName.getText().toString();
		passWord = edtPassWord.getText().toString();
		userIdentity = select_useryupe.getText().toString();
		if(TextUtils.isEmpty(userName)|| TextUtils.isEmpty(passWord)){
			Toast.makeText(Login.this, "请输入用户名和密码",
					Toast.LENGTH_SHORT).show();
		}else{
			dialog.show();
			if(userIdentity.equals("老师")){
				if(system.equals("教学辅助") || system.equals("过程化")){
					NOW_URL = BASE_URL + "TeacherLogin?TeacherName=" + userName.toString()
					+ "&TeacherPasswd=" + MD5ENCODE.MD5Encode(passWord).toString() + "";
				}else if(system.equals("毕业论文")){
					NOW_URL = thesis_BASEURL + "TeaLogin?uName=" + userName.toString()
							+ "&PassWord=" + MD5ENCODE.MD5Encode(passWord).toString() + "";
				}
			}else{
				if(system.equals("教学辅助") || system.equals("过程化")){
					NOW_URL = BASE_URL + "StudentLogin?StuNumber=" + userName.toString()
							+ "&StuPasswd=" + MD5ENCODE.MD5Encode(passWord).toString() + "";
				}else if(system.equals("毕业论文")){
					NOW_URL = thesis_BASEURL + "StuLogin?uName=" + userName.toString()
							+ "&PassWord=" + MD5ENCODE.MD5Encode(passWord).toString() + "";
				}
			}
		}
		System.out.println(NOW_URL);
		StringRequest stringRequest = new StringRequest(NOW_URL, getSuccessListenter(),new Response.ErrorListener() {
			@Override
			public void onErrorResponse(VolleyError error) {
				Toast.makeText(
						Login.this,
						VolleyErrorHelper
								.getErrorType(error),
						Toast.LENGTH_LONG).show();
			}
		});
		executeRequest(stringRequest);
	}

	
	private Response.Listener<String> getSuccessListenter() {
		return new Listener<String>() {
			@Override
			public void onResponse(String response) {
				try {
					//String result = new String(response.getBytes(),"UTF-8");
					System.out.println(response);
					JSONObject json = new JSONObject(response);
					String isSuccess = json.getString("Success");					
					if(isSuccess.equalsIgnoreCase("true"))
					{
						String realname, sex, classname = null, majorname, departmentname = null;
						if(userIdentity.equalsIgnoreCase("老师")){
							realname = json.getString("TeacherRealName");
							TeacherID=json.getString("TeacherID");
							TeacherName=json.getString("TeacherName");
							Editor edit = sp.edit();
							edit.putString(Constant.SPFIELD.REALNAME, realname);
							edit.putString(Constant.SPFIELD.TEACHERID, TeacherID);
							edit.putString(Constant.SPFIELD.NAME, TeacherName);
							edit.commit();
						}else{
							realname = json.getString("StuName");
							sex = json.getString("Sex");
							if(json.has("StuClassName")){
								classname = json.getString("StuClassName");
							}
							majorname = json.getString("MajorName");
							if(json.has("DepartmentName")){
								departmentname = json.getString("DepartmentName");
							}
							Editor edit = sp.edit();
							edit.putString(Constant.SPFIELD.NAME, userName);
							edit.putString(Constant.SPFIELD.REALNAME, realname);
							edit.putString(Constant.SPFIELD.SEX, sex);
							edit.putString(Constant.SPFIELD.CLASSNAME, classname);
							edit.putString(Constant.SPFIELD.MAJORNAME, majorname);
							edit.putString(Constant.SPFIELD.DEPARTMENTNAME, departmentname);
							edit.commit();
						}
						Toast.makeText(Login.this, "登录成功",
								Toast.LENGTH_SHORT).show();
						remenber();
						Intent intent = null;
						if(system.equals("教学辅助")){
							intent=new Intent(Login.this,MainActivity.class);
						}else if(system.equals("过程化")){
							intent=new Intent(Login.this,MainActivityProcess.class);
						}else if(system.equals("毕业论文")){
							if(userIdentity.equals("老师")){
								intent=new Intent(Login.this,MainActivityThesis.class);
							}else{
								intent=new Intent(Login.this,Thesis_StudentMainActivity.class);
							}
						}
						Login.this.startActivity(intent);
				    	Login.this.finish();
					}else{
						Toast.makeText(Login.this, "用户名或密码错误，请重新登录",
								Toast.LENGTH_SHORT).show();
					}
					dialog.dismiss();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		};

	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btnLogin:
			login();
			break;
		case R.id.select_useryupe:
			showUserType();
			break;
		case R.id.select_system:
			selectSystem();
			break;
		}
	}
	
	
	
	//点击退出弹出确认提示框
	public boolean onKeyDown(int keyCode, KeyEvent event) { 
        if (keyCode == KeyEvent.KEYCODE_BACK
                && event.getAction() == KeyEvent.ACTION_DOWN) { 
        	finish();
             return false; 
        }else { 
            return super.onKeyDown(keyCode, event); 
        } 
           
    }
	
	
	//记住用户信息
	public void remenber() {
		if (sp == null){
			sp = getSharedPreferences(FILE, MODE_PRIVATE);
		}
		Editor edit = sp.edit();
		edit.putString(Constant.SPFIELD.NAME, userName);
		edit.putString(Constant.SPFIELD.USERIDENTITY, userIdentity);
		edit.putString(Constant.SPFIELD.System, system);
		if (rem_passWord.isChecked()) {		
			edit.putString(Constant.SPFIELD.PASSWORD, passWord);
			edit.putString(Constant.SPFIELD.ISMEMORY, "yes");	
		} else if (!rem_passWord.isChecked()) {
			edit.putString(Constant.SPFIELD.ISMEMORY, "no");
		}
		edit.commit();
	}
	
	
	////进入界面时，这个if用来判断SharedPreferences里面name和password有没有数据，有的话则直接打在EditText上面
	private void putInto()
	{
		if (ismemory.equals("yes")) {
			rem_passWord.setChecked(true);
			edtUserName.setText(userName = sp.getString(Constant.SPFIELD.NAME, ""));
			edtPassWord.setText(passWord = sp.getString(Constant.SPFIELD.PASSWORD, ""));
			select_useryupe.setText(sp.getString(Constant.SPFIELD.USERIDENTITY, ""));
			select_system.setText(sp.getString(Constant.SPFIELD.System, ""));
		}else if(ismemory.equals("no")){
			edtUserName.setText(sp.getString(Constant.SPFIELD.NAME, ""));
			select_useryupe.setText(sp.getString(Constant.SPFIELD.USERIDENTITY, ""));
			select_system.setText(sp.getString(Constant.SPFIELD.System, ""));
		}
		else
		{
			L.d(TAG, "没有用户信息");
			return ;
		}
	}
}
